version: "3"
services:
  api:
    container_name: vapor-prod-container
    build:
      context: .
      dockerfile: prod.Dockerfile
      # args:
      #   env: dev
    image: api:prod
    # env_file:
    #   - ./environments/db.env
    environment:
      SLEEP_LENGTH: ${SLEEP_LENGTH}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 8080:8080
    networks:
      - vapor-net
    depends_on:
      - db
  db:
    container_name: postgres-container
    image: postgres:12.1-alpine
    ports:
      - 5432:5432
    # env_file:
    #   - ./environments/db.env
    environment:
      SLEEP_LENGTH: ${SLEEP_LENGTH}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      # SLEEP_LENGTH: 5
      # POSTGRES_HOST: db
      # POSTGRES_USER: postgres
      # POSTGRES_PASSWORD: CoDeNaME_88
      # POSTGRES_DB: test
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - vapor-net
    restart: unless-stopped
  web:
    container_name: nginx-container
    build:
      context: containers/nginx
      dockerfile: Dockerfile
    image: web:prod
    ports:
      - 80:80
    volumes:
      - log-data:/var/log/nginx
    #   - public-data:/app/public
    networks:
      - vapor-net
    restart: always
    depends_on:
      - api
networks:
  vapor-net:
    driver: bridge
volumes:
#   public-data:
#   # tmp-data:
  log-data:
  db-data:
